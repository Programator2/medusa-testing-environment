tree	"fs" clone of file by getfile getfile.filename;
primary tree "fs";
tree	"domain" of process;

space all_domains = recursive "domain";
space all_files	= recursive "/"
                  - recursive "@{TEST_ENV}";
space allowed =   recursive "@{TEST_ENV}"
		  - recursive "@{TEST_ENV}/creation/restricted";
space restricted = recursive "@{TEST_ENV}/creation/restricted";

all_domains     ENTER   all_domains,
                READ    all_domains, all_files, allowed, restricted,
                WRITE   all_domains, all_files, allowed, restricted,
                SEE     all_domains, all_files, allowed, restricted;

function log
{
    local printk buf.message=$1 + "\\n";
    update buf;
}

function log_proc {
    log ("" + $1 + " pid="+process.pid+" domain="+primaryspace(process,@"domain")
        +" uid="+process.uid+" luid="+process.luid +" euid="+process.euid+" suid="+process.suid
        +" pcap="+process.pcap+" icap="+process.icap+" ecap="+process.ecap
        +" med_sact="+process.med_sact+" vs=["+spaces(process.vs)+"] vsr=["+spaces(process.vsr)+"] vsw=["
        +spaces(process.vsw)+"] vss=["+spaces(process.vss)+"]"
        +" cmdline="+process.cmdline
//      +" sync-trace=["+process.syscall+"]"
    );
}
* getprocess {
    enter(process,@"domain/init");
    log_proc("getprocess");
    return OK;
}
function _init {}
